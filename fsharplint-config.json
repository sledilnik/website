{
  "ignoreFiles": [
    "*assemblyinfo.*"
  ],
  "formatting": {
    "typedItemSpacing": {
      "enabled": false,
      "config": {
        "typedItemStyle": "NoSpaces"
      }
    },
    "typePrefixing": { "enabled": false },
    "unionDefinitionIndentation": { "enabled": false },
    "moduleDeclSpacing": { "enabled": false },
    "classMemberSpacing": { "enabled": false },
    "tupleFormatting": {
      "tupleCommaSpacing": { "enabled": false },
      "tupleIndentation": { "enabled": false },
      "tupleParentheses": { "enabled": false }
    },
    "patternMatchFormatting": {
      "patternMatchClausesOnNewLine": { "enabled": false },
      "patternMatchOrClausesOnNewLine": { "enabled": false },
      "patternMatchClauseIndentation": {
        "enabled": true,
        "config": {
          "allowSingleLineLambda": false
        }
      },
      "patternMatchExpressionIndentation": { "enabled": true }
    }
  },
  "conventions": {
    "recursiveAsyncFunction": { "enabled": true },
    "redundantNewKeyword": { "enabled": true },
    "nestedStatements": {
      "enabled": false,
      "config": {
        "depth": 8
      }
    },
    "reimplementsFunction": { "enabled": true },
    "canBeReplacedWithComposition": { "enabled": false },
    "raiseWithTooManyArgs": {
      "raiseWithSingleArgument": { "enabled": true },
      "nullArgWithSingleArgument": { "enabled": true },
      "invalidOpWithSingleArgument": { "enabled": true },
      "invalidArgWithTwoArguments": { "enabled": true },
      "failwithfWithArgumentsMatchingFormatString": { "enabled": true }
    },
    "sourceLength": {
      "maxLinesInLambdaFunction": {
        "enabled": false,
        "config": {
          "maxLines": 7
        }
      },
      "maxLinesInMatchLambdaFunction": {
        "enabled": false,
        "config": {
          "maxLines": 100
        }
      },
      "maxLinesInValue": {
        "enabled": false,
        "config": {
          "maxLines": 100
        }
      },
      "maxLinesInFunction": {
        "enabled": false,
        "config": {
          "maxLines": 100
        }
      },
      "maxLinesInMember": {
        "enabled": false,
        "config": {
          "maxLines": 100
        }
      },
      "maxLinesInConstructor": {
        "enabled": false,
        "config": {
          "maxLines": 100
        }
      },
      "maxLinesInProperty": {
        "enabled": false,
        "config": {
          "maxLines": 70
        }
      },
      "maxLinesInModule": {
        "enabled": false,
        "config": {
          "maxLines": 1000
        }
      },
      "maxLinesInRecord": {
        "enabled": false,
        "config": {
          "maxLines": 500
        }
      },
      "maxLinesInEnum": {
        "enabled": false,
        "config": {
          "maxLines": 500
        }
      },
      "maxLinesInUnion": {
        "enabled": false,
        "config": {
          "maxLines": 500
        }
      },
      "maxLinesInClass": {
        "enabled": false,
        "config": {
          "maxLines": 500
        }
      }
    },
    "naming": {
      "interfaceNames": {
        "enabled": true,
        "config": {
          "naming": "PascalCase",
          "underscores": "None",
          "prefix": "I"
        }
      },
      "exceptionNames": {
        "enabled": true,
        "config": {
          "naming": "PascalCase",
          "underscores": "None",
          "suffix": "Exception"
        }
      },
      "typeNames": {
        "enabled": true,
        "config": {
          "naming": "PascalCase",
          "underscores": "None"
        }
      },
      "recordFieldNames": {
        "enabled": false,
        "config":  {
          "naming": "PascalCase",
          "underscores": "None"
        }},
      "enumCasesNames": {
        "enabled": true,
        "config": {
          "naming": "PascalCase",
          "underscores": "None"
        }
      },
      "unionCasesNames": {
        "enabled": true,
        "config": {
          "naming": "PascalCase",
          "underscores": "None"
        }
      },
      "moduleNames": {
        "enabled": true,
        "config": {
          "naming": "PascalCase",
          "underscores": "None"
        }
      },
      "literalNames": {
        "enabled": true,
        "config": {
          "naming": "PascalCase",
          "underscores": "None"
        }
      },
      "namespaceNames": {
        "enabled": true,
        "config": {
          "naming": "PascalCase",
          "underscores": "None"
        }
      },
      "memberNames": {
        "enabled": false,
        "config": {
          "naming": "PascalCase",
          "underscores": "AllowPrefix"
        }
      },
      "parameterNames": {
        "enabled": true,
        "config": {
          "naming": "CamelCase",
          "underscores": "AllowPrefix"
        }
      },
      "measureTypeNames": {
        "enabled": true,
        "config": {
          "underscores": "None"
        }
      },
      "activePatternNames": {
        "enabled": false,
        "config": {
          "naming": "PascalCase",
          "underscores": "None"
        }
      },
      "publicValuesNames": {
        "enabled": true,
        "config": {
          "underscores": "AllowPrefix"
        }
      },
      "nonPublicValuesNames": {
        "enabled": true,
        "config": {
          "naming": "CamelCase",
          "underscores": "AllowPrefix"
        }
      }
    },
    "numberOfItems": {
      "maxNumberOfItemsInTuple": {
        "enabled": false,
        "config": {
          "maxItems": 4
        }
      },
      "maxNumberOfFunctionParameters": {
        "enabled": false,
        "config": {
          "maxItems": 5
        }
      },
      "maxNumberOfMembers": {
        "enabled": false,
        "config": {
          "maxItems": 32
        }
      },
      "maxNumberOfBooleanOperatorsInCondition": {
        "enabled": false,
        "config": {
          "maxItems": 4
        }
      }
    },
    "binding": {
      "favourIgnoreOverLetWild": { "enabled": true },
      "wildcardNamedWithAsPattern": { "enabled": true },
      "uselessBinding": { "enabled": true },
      "tupleOfWildcards": { "enabled": true }
    }
  },
  "typography": {
    "indentation": {
      "enabled": false,
      "config": {
        "numberOfIndentationSpaces": 4
      }
    },
    "maxCharactersOnLine": {
      "enabled": false,
      "config": {
        "maxCharactersOnLine": 120
      }
    },
    "trailingWhitespaceOnLine": {
      "enabled": false,
      "config": {
        "numberOfSpacesAllowed": 0,
        "oneSpaceAllowedAfterOperator": true,
        "ignoreBlankLines": true
      }},
    "maxLinesInFile": {
      "enabled": false,
      "config": {
        "maxLinesInFile": 1000
      }
    },
    "trailingNewLineInFile": { "enabled": false },
    "noTabCharacters": { "enabled": true }
  },
  "hints": {
    "add": [],
    "ignore": [
      "List.head (List.sort x) ===> List.min x",
      "List.head (List.sortBy f x) ===> List.minBy f x",

      "List.map f (List.map g x) ===> List.map (g >> f) x",
      "Array.map f (Array.map g x) ===> Array.map (g >> f) x",
      "Seq.map f (Seq.map g x) ===> Seq.map (g >> f) x",
      "List.rev (List.rev x) ===> x",
      "Array.rev (Array.rev x) ===> x",
      "List.fold (@) [] x ===> List.concat x",
      "List.map id x ===> id x",
      "Array.map id x ===> id x",
      "Seq.map id x ===> id x",

      "List.length x >= 0 ===> true",
      "Array.length x >= 0 ===> true",
      "Seq.length x >= 0 ===> true",

      "x = true ===> x",
      "x = false ===> not x",
      "true = a ===> a",
      "false = a ===> not a",
      "a <> true ===> not a",
      "a <> false ===> a",
      "true <> a ===> not a",
      "false <> a ===> a",
      "if a then true else false ===> a",
      "if a then false else true ===> not a",
      "not (not x) ===> x",

      "(fst x, snd x) ===> x",

      "true && x ===> x",
      "false && x ===> false",
      "true || x ===> true",
      "false || x ===> x",
      "not true ===> false",
      "not false ===> true",
      "fst (x, y) ===> x",
      "snd (x, y) ===> y",
      "List.fold f x [] ===> x",
      "Array.fold f x [||] ===> x",
      "List.foldBack f [] x ===> x",
      "Array.foldBack f [||] x ===> x",
      "x - 0 ===> x",
      "x * 1 ===> x",
      "x / 1 ===> x",

      "x @ [] ===> x",

      "List.isEmpty [] ===> true",
      "Array.isEmpty [||] ===> true",

      "Array.append a (Array.append b c) ===> Array.concat [|a; b; c|]"
    ]
  }
}
